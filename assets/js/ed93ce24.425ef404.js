"use strict";(self.webpackChunkbpmn=self.webpackChunkbpmn||[]).push([[4367],{9613:(e,t,s)=>{s.d(t,{Zo:()=>l,kt:()=>u});var n=s(9496);function r(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function o(e,t){var s=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),s.push.apply(s,n)}return s}function a(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{};t%2?o(Object(s),!0).forEach((function(t){r(e,t,s[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(s)):o(Object(s)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(s,t))}))}return e}function i(e,t){if(null==e)return{};var s,n,r=function(e,t){if(null==e)return{};var s,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)s=o[n],t.indexOf(s)>=0||(r[s]=e[s]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)s=o[n],t.indexOf(s)>=0||Object.prototype.propertyIsEnumerable.call(e,s)&&(r[s]=e[s])}return r}var c=n.createContext({}),p=function(e){var t=n.useContext(c),s=t;return e&&(s="function"==typeof e?e(t):a(a({},t),e)),s},l=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var s=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),m=p(s),h=r,u=m["".concat(c,".").concat(h)]||m[h]||d[h]||o;return s?n.createElement(u,a(a({ref:t},l),{},{components:s})):n.createElement(u,a({ref:t},l))}));function u(e,t){var s=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=s.length,a=new Array(o);a[0]=h;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[m]="string"==typeof e?e:r,a[1]=i;for(var p=2;p<o;p++)a[p]=s[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,s)}h.displayName="MDXCreateElement"},262:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var n=s(1163),r=(s(9496),s(9613));const o={sidebar_position:8},a="Messages",i={unversionedId:"how-it-works/messages",id:"how-it-works/messages",title:"Messages",description:"Camunda 8 uses message buffering, so the process instance doesn't have to be ready to receive the message event at exactly the moment it occurs (use message attribute TTL - time to live instead of time events or retry workarounds). Buffered message is mapped to a process instance based on the correlation key. Here the best practices on creating of correlation key taken from book Practical process automation",source:"@site/docs/how-it-works/messages.md",sourceDirName:"how-it-works",slug:"/how-it-works/messages",permalink:"/bpmn/docs/how-it-works/messages",draft:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Open topics",permalink:"/bpmn/docs/how-it-works/open-topics"},next:{title:"Common patterns",permalink:"/bpmn/docs/category/common-patterns"}},c={},p=[{value:"Identify the process instance waiting for the response",id:"identify-the-process-instance-waiting-for-the-response",level:2},{value:"Several instances within a process",id:"several-instances-within-a-process",level:3},{value:"Processes with different BPMN IDs",id:"processes-with-different-bpmn-ids",level:3},{value:"Processes with the same BPMN ID but different versions",id:"processes-with-the-same-bpmn-id-but-different-versions",level:3}],l={toc:p},m="wrapper";function d(e){let{components:t,...o}=e;return(0,r.kt)(m,(0,n.Z)({},l,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"messages"},"Messages"),(0,r.kt)("p",null,"Camunda 8 uses ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://docs.camunda.io/docs/components/concepts/messages/#message-buffering"},"message buffering")),", so the process instance doesn't have to be ready to receive the message event at exactly the moment it occurs (use message attribute TTL - time to live instead of time events or retry workarounds). Buffered message is mapped to a process instance based on the correlation key. Here the best practices on creating of correlation key taken from ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://camunda.com/blog/2021/03/publishing-practical-process-automation/"},"book Practical process automation"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"use UUID for correlation ID"),(0,r.kt)("li",{parentName:"ul"},"don't use process instance ID"),(0,r.kt)("li",{parentName:"ul"},"avoid using business data that are not unique within the cluster")),(0,r.kt)("p",null,"The correlation key have to be unique within the cluster to assure that the message is catched by the right process. The following situations show how the matching of message and process instance is done when the correlation key is the same."),(0,r.kt)("h2",{id:"identify-the-process-instance-waiting-for-the-response"},"Identify the process instance waiting for the response"),(0,r.kt)("h3",{id:"several-instances-within-a-process"},"Several instances within a process"),(0,r.kt)("p",null,"When several process instances within a one process are running and subscribe for a message, the message is correlated only once to one of them."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Process with several instances",src:s(5601).Z,width:"3986",height:"1803"})),(0,r.kt)("p",null,"Other instances remain waiting (unless not handled in a process differently). See ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"https://docs.camunda.io/docs/components/concepts/process-instance-modification/"},"process instance modification"))," for possibilities to repair a running process instance."),(0,r.kt)("h3",{id:"processes-with-different-bpmn-ids"},"Processes with different BPMN IDs"),(0,r.kt)("p",null,"Processes with different BPMN Process IDs are independend different processes. By creation of multiple subscriptions with the same correlation key from different processes, a message is correlated within each process (once within one BPMN process ID) to only one process instance from all existing ones."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Processes with different BPMN process IDs",src:s(2702).Z,width:"3999",height:"2706"})),(0,r.kt)("h3",{id:"processes-with-the-same-bpmn-id-but-different-versions"},"Processes with the same BPMN ID but different versions"),(0,r.kt)("p",null,"When a process is deployed, it receives a version number. After making changes to the process and re-deployment, the process version is increased, the BPMN Process ID remains the same as before. Instances can be created for any of these versions. There might be two process instances of the same process but with different versions created when:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"one version of a process is deployed and an instance is created"),(0,r.kt)("li",{parentName:"ul"},"the process was changed and deployed again",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"the process with the same BPMN Process ID but different version is created"),(0,r.kt)("li",{parentName:"ul"},"an instance is created")))),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"One BPMN process ID with several versions",src:s(2139).Z,width:"3986",height:"2735"})),(0,r.kt)("p",null,"A message is correlated only once to a process (once within one BPMN process ID), across all versions of this process. If multiple subscriptions for the same process are opened (by multiple process instances or within one instance), the message is correlated only to one of the subscriptions."))}d.isMDXComponent=!0},2702:(e,t,s)=>{s.d(t,{Z:()=>n});const n=s.p+"assets/images/msg_differentProcesses-2752b43fc5bb79a27c1133140d223d91.svg"},5601:(e,t,s)=>{s.d(t,{Z:()=>n});const n=s.p+"assets/images/msg_oneProcessManyInstances-0d1a8463ccbbd3865a13c8460192e866.svg"},2139:(e,t,s)=>{s.d(t,{Z:()=>n});const n=s.p+"assets/images/msg_oneProcessManyVersions-0440bad4377a0b33ca7d98c18cbc698b.svg"}}]);